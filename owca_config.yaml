kind: ConfigMap 
apiVersion: v1 
metadata:
    name: owca-config

data:
  owca_config.yml: |

    runner: !AllocationRunner
      action_delay: 5.0
      rdt_enabled: true
      enable_derived_metrics: True
      node: !KubernetesNode
        # We support two options: cgroupfs, systemd.
        cgroup_driver: cgroupfs
        client_private_key: "/etc/kubernetes/ssl/apiserver-kubelet-client.key"
        client_cert: "/etc/kubernetes/ssl/apiserver-kubelet-client.crt"
        kubelet_endpoint: "https://100.64.176.33:10250" 
        monitored_namespaces: ["kubecon-demo"]

      # TODO: Create files metrics.prom and anomalies.prom
      metrics_storage: !LogStorage
        overwrite: True
        output_filename: /var/lib/owca/metrics.prom
      anomalies_storage: !LogStorage
        overwrite: True
        output_filename: /var/lib/owca/anomalies.prom
      allocations_storage: !LogStorage
        overwrite: True
        output_filename: /var/lib/owca/allocations.prom

      # allocator: !StaticAllocator
      #   rules: 
      #   - name: Static default rule for all tasks.
      #     allocations:
      #       cpu_quota: 1.0
      #       cpu_shares: 10
      #   # Alternate way to provide allocations rules.
      #   config: "/etc/owca/static_allocator.yml"
      allocator: !ExampleAllocator

      extra_labels:
        env_uniq_id: '33'
        own_ip: '100.64.176.33'

  static_allocator.yml: |

    # As `labels` fields is not defined, this rule applies to all tasks.
    - name: Dynamic rules loaded from shared file.
      # Labels selector to apply allocations rules only for specified tasks.
      labels:
        task_kind: best-effort
      allocations:
        cpu_quota: 0.02
        cpu_shares: 2
        rdt:
          mb: 'MB:0=60'

  example_allocator.py: |

    from owca.allocators import Allocator

    class ExampleAllocator(Allocator):

        def allocate(self, platform, tasks_measurements,
                     tasks_resources,tasks_labels, tasks_allocations
            ):
            return {'5f451f78-7101-11e9-8882-246e96663c22': {'cpu_quota': 0.3}}, [], []


